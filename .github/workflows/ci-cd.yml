name: CI/CD Pipeline

permissions:
  actions: write


on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  terraform:
    runs-on: ubuntu-latest
    outputs:
      ec2_ip: ${{ steps.get_ip.outputs.ec2_public_ip }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: Setup Terraform
        run: |
          sudo apt-get update && sudo apt-get install -y unzip
          curl -LO https://releases.hashicorp.com/terraform/1.6.0/terraform_1.6.0_linux_amd64.zip
          unzip terraform_1.6.0_linux_amd64.zip
          sudo mv terraform /usr/local/bin/

      - name: Initialize Terraform
        working-directory: infra
        run: terraform init

      - name: Apply Terraform Configuration
        id: terraform
        working-directory: infra
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          terraform apply -auto-approve \
            -var="aws_access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" \
            -var="aws_secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}"

      - name: Get EC2 Public IP
        id: get_ip
        working-directory: infra
        run: |
          # Obtendo o IP público da instância EC2
          IP=$(terraform output -raw ec2_public_ip)
          echo "EC2_PUBLIC_IP=$IP" >> $GITHUB_ENV

          # Exibindo o IP público para logs
          echo "EC2 Public IP: $IP"

          # Salvando a chave privada e corrigindo permissões
          echo "$(terraform output -raw private_key)" > $HOME/private_key.pem
          chmod 400 $HOME/private_key.pem

          # Verificando se o arquivo foi criado corretamente
          ls -l $HOME/private_key.pem

      - name: Show EC2 IP
        run: |
          echo "The EC2 Public IP is: ${{ env.EC2_PUBLIC_IP }}"


  build:
    runs-on: ubuntu-latest
    needs: terraform
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Unit Tests
        run: pytest tests/unit

      - name: Build Docker Image
        run: docker build -t techshop/app:${{ github.sha }} .

  deploy:
    runs-on: ubuntu-latest
    needs: [build, terraform]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: terraform wrapper
        uses: hashicorp/setup-terraform@v3

      - name: Debug EC2 IP
        run: echo "EC2 IP is ${{ needs.terraform.outputs.ec2_ip }}"

      - name: Deploy to AWS EC2
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1
          EC2_PUBLIC_IP: ${{ needs.terraform.outputs.ec2_ip }}
        run: |
          ssh -o StrictHostKeyChecking=no -i $HOME/private_key.pem ubuntu@${{ env.EC2_PUBLIC_IP }} \
            "docker pull techshop/app:${{ github.sha }} && docker run -d -p 80:80 techshop/app:${{ github.sha }}"



      
